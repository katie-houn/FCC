#solar API

# Define the lat, long of the location and the year
x = input(print("Enter the latitude of your garden location up to 4 decimal places: "))
y = input(print("Enter the longitude of your garden location up to 4 decimal places: "))
z = input(print("Enter the current year: "))

lat, lon, year = x, y, z

api_key = '1uFJxKV2ndMqaeVF7dZUxWUxOtBJ9Ex2daCjgAl3'

# Set the attributes to extract (e.g., dhi, ghi, etc.), separated by commas.
attributes = 'ghi,dhi,dni,wind_speed,air_temperature,solar_zenith_angle'
# Choose year of data
year = '2010'
leap_year = 'false'
# Set time interval in minutes
interval = '60'

# Specify Coordinated Universal Time (UTC), 'true' will use UTC, 'false' will use the local time zone of the data.
# SAM requires the data to be in the local time zone.
utc = 'false'



#my info
your_name = 'Kaitlyn+Calhoun'
reason_for_use = 'cultivator+project'
your_affiliation = 'University+of+Notre+Dame'
your_email = 'kcalhou3@nd.edu'
mailing_list = 'false'

# Declare url string
url = 'http://developer.nrel.gov/api/solar/nsrdb_psm3_download.csv?wkt=POINT({lon}%20{lat})&names={year}&leap_day={leap}&interval={interval}&utc={utc}&full_name={name}&email={email}&affiliation={affiliation}&mailing_list={mailing_list}&reason={reason}&api_key={api}&attributes={attr}'.format(year=year, lat=lat, lon=lon, leap=leap_year, interval=interval, utc=utc, name=your_name, email=your_email, mailing_list=mailing_list, affiliation=your_affiliation, reason=reason_for_use, api=api_key, attr=attributes)
# Return just the first 13 lines to get metadata:
info = pd.read_csv(url, nrows=13)
timezone, elevation = info['Local Time Zone'], info['Elevation']
